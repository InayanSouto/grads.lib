* draw_plume.gs
*
* This script draws a plume diagram containing forecasts of the 
* NINO3.4 index from the North American Multi-Model Ensemble (NMME). 
* Embedded histograms are used at each forecast lead time to convey 
* information about the variability in the ensemble forecasts in a clear
* and easy-to-interpret format.
*
* The data files were originally published at ftp://ftp.cpc.ncep.noaa.gov/NMME/ 
* They are also behind a GDS at http://monsoondata.org:9090/dods/nmme/
*
* See http://cola.gmu.edu/enso_forecast_plumes.html for more information
* about the plumes and an archive of images generated by this script. 
* 
* The script takes two arguments which specify the desired initialization date
* as a 4-digit year and a 2-digit month. First available forecast is 2011-08.
*
* Written by Jennifer Adams <jadams21@gmu.edu> 

function main(args)
year=subwrd(args,1)
mm=subwrd(args,2)
if (args='' | year='' | mm='')
  say 'Usage: draw_plume <yyyy> <mm>'
  return
endif

print=0
verb=1
fmt='%5.2f'
fmt2='%2.0f'

'reinit'
setcols(255)
'set display white'; 'clear'
'set hershey off'  
'set datawarn off'
'set warn off'
'set lwid 13 4'

totmodels=13
model.1  = CFSv1         ; numens.1  = 32
model.2  = CFSv2         ; numens.2  = 32
model.3  = CMC1          ; numens.3  = 10
model.4  = CMC2          ; numens.4  = 10
model.5  = ECHAMA        ; numens.5  = 12
model.6  = ECHAMF        ; numens.6  = 12
model.7  = GFDL          ; numens.7  = 10
model.8  = GFDL_FLOR     ; numens.8  = 24
model.9  = GFDL_FLORa06  ; numens.9  = 12
model.10 = GFDL_FLORb01  ; numens.10 = 12
model.11 = NASA          ; numens.11 = 11
model.12 = NCAR          ; numens.12 =  6 
model.13 = NCAR_CCSM4    ; numens.13 = 10

* This is the number of time steps in each forecast
tmax=8

* We'll be drawing anomalies from minanom to maxanom
* bins are 0.25 degrees wide
minanom=-4
maxanom=4
bininc=0.25   
nbins=(maxanom-minanom)/bininc

* Open the data files, define the nino-3.4 index values
server='http://monsoondata.org:9090/dods/'
i=1
mused=0
usedmodels=''
usedesizes=''
m=1
while (m<=totmodels)
  dfile=server'nmme/'year%mm'/tmpsfc_'model.m
  'sdfopen 'dfile
  if (rc=0)
*   a forecast exists for this model
    ln2=sublin(result,2)
    fn=subwrd(ln2,8)

*   increment the model count, save the name and the number of ensembles
    mused=mused+1
    usedmodels=usedmodels' 'model.m
    usedesizes=usedesizes' 'numens.m

*   get the range of times
    'set dfile 'fn
    'set t 1 'tmax
    'q time'
    time1=subwrd(result,3)
    time2=subwrd(result,5)

*   build a server-side analysis URL
    dset='nmme/'year%mm'/tmpsfc_'model.m
    expr='eloop(tloop(aave(tmpsfc,lon=-170,lon=-120,lat=-5,lat=5)))' ;* NINO3.4 definition
    dims='0:0,-90:-90,0:0,'time1':'time2',01:'numens.m
    URL=server'_expr_{'dset'}{'expr'}{'dims'}'
    'close 'fn
*   This may take some time if the calculation result is not cached
    'sdfopen 'URL

*   define a grid of Nino3.4 index values in the T,E dimensions
    'set dfile 'fn
    'set t 1 'tmax
    'set x 1'
    'set y 1'
    'set e 1 'numens.m
    'grid'mused'=result'

*   populate a script variable with the index values
    'set gxout print'
    'set prnopts %6.3f 10 1 u'
    e=1
    while (e<=numens.m)
      'set e 'e
      'd grid'mused
      nino34.i = sublin(result,2)
      e=e+1
      i=i+1
    endwhile

*   calculate the ensemble mean, copy into script variable
    'set e 1'
    'vals'mused'=ave(grid'mused',e=1,e='numens.m')'
    'd vals'mused
    eavgnino34.mused = sublin(result,2)
  endif
  m=m+1
endwhile
nmodels=mused

* If no data, then quit
total=i-1
if (nmodels=0)
  say ''
  say 'No available forecasts for 'year'-'mm
  return
endif  

say ''
say nmodels' models: 'usedmodels 
say nmodels' esizes: 'usedesizes
say total' total members'

* print out the ensemble mean values 
if (verb)
  m=1
  while (m<=nmodels)
    name=subwrd(usedmodels,m)
    say name
    say 'ensemble mean: 'eavgnino34.m
    m=m+1
  endwhile
endif

* initialize bin counts and min/max
t=1
while (t<=tmax)
  min.t=100
  max.t=-100
  b=1; while (b<=nbins); bin.t.b=0; b=b+1; endwhile
  t=t+1
endwhile

* populate the bins for the histograms, capture min/max for each time step
t=1
while (t<=tmax)
  i=1
  while (i<=total)
    val=subwrd(nino34.i,t)
    if (val!='Undef')
      if (val > max.t); max.t=val; endif
      if (val < min.t); min.t=val; endif
      b=1
      while (b<=nbins)
        bmin=minanom+(b-1)*bininc
        bmax=bmin+bininc
        if (bmin=minanom) 
          if (val<bmax); bin.t.b = bin.t.b+1; endif
        else
          if (bmax=maxanom) 
            if (val>=bmin); bin.t.b = bin.t.b+1; endif
          else
            if (val>=bmin & val<bmax); bin.t.b = bin.t.b+1;  endif
          endif
        endif
        b=b+1
      endwhile
    endif
    i=i+1
  endwhile
  t=t+1
endwhile
say ''

* report on bin min/max
maxbinwidth=0
maxbin=1
minbin=32
minval=4
maxval=-4
t=1
while (t<=tmax)
  b=1
  while (b<=nbins)
    if (bin.t.b>0)
      if (b<minbin); minbin=b; endif
      if (b>maxbin); maxbin=b; endif
      if (min.t<minval); minval=min.t; endif
      if (max.t>maxval); maxval=max.t; endif
      if (bin.t.b>maxbinwidth); maxbinwidth=bin.t.b; endif
    endif
    b=b+1
  endwhile
  t=t+1
endwhile
if (verb)
  say ''
  say 'minbin='minbin'  maxbin='maxbin
  say 'minval='minval'  maxval='maxval
  say 'maxbinwidth='maxbinwidth
  say ''
endif
vrangemin=minanom+(minbin-1)*bininc
vrangemax=minanom+(maxbin)*bininc


* get page size and set plot area
'q gxinfo'
psz=sublin(result,2)
px=subwrd(psz,4)
py=subwrd(psz,6)
margin=0.6
emargin=0.4
'set parea 'margin' 'px-emargin' 'margin' 'py-emargin
'set parea 0.75 'px-emargin' 'margin' 'py-emargin


* set up the graphic by drawing one (invisible) timeseries
tfirst = -1
tlast = tmax+0.99
'set t 'tfirst' 'tlast
'set cthick 1'
'set gxout contour'
'set grid on 3 15 2'
'set frame on'
'set xlab on'
'set ylab on'
'set xlopts 1 5 0.15'
'set ylint 0.5'
'set vrange 'minanom-0.125' 'maxanom+0.125
'set grads off'
'set cmark 0'
'set ccolor 0'
'd vals1'

* draw a zero line
'q gr2xy 'tfirst' 0'
x1=subwrd(result,3)
y1=subwrd(result,6)
'q gr2xy 'tlast' 0'
x2=subwrd(result,3)
'set rgb 99 100 100 100'
'set line 99 1 5'
'draw line 'x1' 'y1' 'x2' 'y1

* draw color blocks under Y axis labels
delta=0.07
xr=0.75-delta
xl=delta+delta
'q gr2xy -1 'maxanom; blktopy=subwrd(result,6)
'q gr2xy -1 'minanom; blkboty=subwrd(result,6)
yspan=blktopy-blkboty
yinc=yspan/nbins
ybot=blkboty
b=1 
while (b<=nbins)
  ytop=ybot+yinc
  cc=subwrd(_cols,b)
  'set line 'cc
  'draw recf 'xl' 'ybot' 'xr' 'ytop
* an extra bit to extend the color bar to the edges of the plot
  if (b=1) ; 'draw recf 'xl' 'margin' 'xr' 'ybot ; endif
  if (b=nbins) ; 'draw recf 'xl' 'ytop' 'xr' 'py-emargin ; endif
  ybot=ytop  
  b=b+1
endwhile


* get width of one time step and calculate scale factor using the maxbinwidth 
* this way no histogram overlaps the base of the subsequent histogram
'q gr2xy 1 0'
x1=subwrd(result,3)
'q gr2xy 2 0'
x2=subwrd(result,3)
maxwid=(x2-x1)*0.90
sf=maxwid/maxbinwidth


* Draw the histograms
'set dfile 1'
t=1
if (verb); say 'Here are the numbers in each histogram bin:'; endif
while (t<=tmax)
  prnt='t='t':'
  b=1
  while (b<=nbins)
    col=subwrd(_cols,b)
    bmin=minanom+(b-1)*bininc
    bmax=bmin+bininc
    if (bin.t.b>0)
      if (min.t>bmin)
        'q gr2xy 't' 'min.t
      else
        'q gr2xy 't' 'bmin
      endif
      xmin=subwrd(result,3)
      ymin=subwrd(result,6)
      if (max.t<bmax)
        'q gr2xy 't' 'max.t
      else
        'q gr2xy 't' 'bmax
      endif
      xmax=subwrd(result,3)
      ymax=subwrd(result,6)
      'set line 'col
      wid=bin.t.b*sf
*     expand histogram block to a minimum width/thickness of 0.02
      if (ymax-ymin<0.02); ymax=ymax+0.02; endif  
      if (wid<0.02); wid=0.02; endif
      'draw recf 'xmin' 'ymin' 'xmin+wid' 'ymax
    endif
    bval=math_format(fmt2,bin.t.b)
    prnt=prnt' 'bval
    b=b+1
  endwhile 
* draw a line showing the range of values
 'q gr2xy 't' 'max.t
  xmax=subwrd(result,3)
  ymax=subwrd(result,6)
 'q gr2xy 't' 'min.t
  xmin=subwrd(result,3)
  ymin=subwrd(result,6)
  'set line 99 1 3'
  'draw line 'xmin' 'ymin' 'xmax' 'ymax
* print out histogram numbers
  if (verb); say prnt; endif
  t=t+1
endwhile

* Add ensemble means from each model

* figure out where to place the key
val=0.5*(min.2+max.2)
buff=0.09
blockhgt=(nmodels+2)*2*buff
if (val<0)
* key goes in upper left corner
  'q gr2xy -0.8 'maxanom-0.05 
  ytop=subwrd(result,6)
  ybot=ytop-blockhgt
else
* key goes in bottom left corner
 'q gr2xy -0.8 'minanom+0.05
  ybot=subwrd(result,6)
  ytop=ybot+blockhgt
endif

x1=0.9
x2=x1+0.6

* draw a white box underneath the key to cover up the grid lines and make it easier to read
'set line 0 1 1'; 'draw recf 'x1-buff' 'ybot' 'x1+1.75' 'ytop

cols='301 302 303 304 305 306 307 308'
thk=10
style=1
'set cthick 'thk
'set cstyle 'style

'set t 'tfirst' 'tlast
'set frame off'
'set grid off'
'set xlab off'

* draw a line in the key for the obs
yinc=0.18
ytop=ytop-(yinc/2)
'set line  1 'style' 13' ; 'draw line 'x1' 'ytop' 'x2' 'ytop
'set line 97 'style'  5' ; 'draw line 'x1' 'ytop' 'x2' 'ytop
'set strsiz 0.12 0.12'
'set string 1 l 4'
'draw string 'x2+0.1' 'ytop' OBS'
expr='('
ytop=ytop-yinc
m=1
while (m<=nmodels)
* get a color
  'set grads off'
  'set cmark 0'
  if (m=1) 
    'set ylab on'
    'set ylopts 1 5 0.15'
    'set ylint 0.5'
  else
    'set ylab off'
  endif
  c=subwrd(cols,m)
  'set ccolor 'c
  'set cthick 'thk
  'd vals'm

* add to the expression to get average of ensemble means
  expr=expr'vals'm'+'
* add a line to the key
  'set line 'c' 'style' 'thk
  'draw line 'x1' 'ytop' 'x2' 'ytop
* remove underscore from model name (for beauty's sake)
* add the number of ensembles for each model
* put a white rectangle behind the label
  esize=subwrd(usedesizes,m)
  modelname=subwrd(usedmodels,m)
  len=math_strlen(modelname)
  j=1
  newname=''
  while (j<=len)
    c=substr(modelname,j,1); 
    if (c='_')
      newname=newname' '
    else
      newname=newname%c
    endif
    j=j+1
  endwhile
  keylab=newname' ('esize')'
  'q string 'keylab; len=subwrd(result,4)
  'set line 0'
  'draw recf 'x2+0.1' 'ytop-(yinc/2)' 'x2+0.1+len' 'ytop+(yinc/2)
  'draw string 'x2+0.1' 'ytop' 'keylab
   ytop=ytop-yinc
  m=m+1
endwhile
'set line 1 2 12'
'draw line 'x1' 'ytop' 'x2' 'ytop
'set line 0'
'draw recf 'x2+0.1' 'ytop-(yinc/2)' 'x2+0.1+len' 'ytop+(yinc/2)
keylab='NMME ('total')'
'q string 'keylab; len=subwrd(result,4)
'draw string 'x2+0.1' 'ytop' 'keylab


* Add a thick black dashed line for the average of all models
style=2
expr=expr'0)/'nmodels
'set ccolor 1'
'set cthick 12'
'set cstyle 'style
'set cmark 0'
'set grads off'
'd 'expr

* a little kludge to get the mme at t=1, where one model is undefined
'set t 1'
cnt=0
sum=0
m=1
while (m<=nmodels)
  'd vals'm
  val=subwrd(result,4)
  if (val>-9e8) 
    sum=sum+val
    cnt=cnt+1
  endif
  m=m+1
endwhile
if (cnt)
  val1=sum/cnt
  'set t 2'
  'd 'expr
  val2=subwrd(result,4)

* draw a line segment connecting t=1 to t=2
  'q gr2xy 1 'val1; x1=subwrd(result,3); y1=subwrd(result,6)
  'q gr2xy 2 'val2; x2=subwrd(result,3); y2=subwrd(result,6)
  'set line 1 'style' 12' ; 'draw line 'x1' 'y1' 'x2' 'y2
endif


* Add the observed nino34 index values
'sdfopen 'server'nmme/sstoi'
if (rc=0)
  ln2=sublin(result,2)
  fn=subwrd(ln2,8)

* get the value for nino34 at the forecast initialization time
  'set t 0'
  'd nino34.'fn'(x=1,y=1)'
  val0 = subwrd(result,4)

* Add a grey triangle connecting end of observed nino34 to range of forecasts at t=1 (or t=2)
  if (min.1 != 100 & max.1 != -100)
    'q gr2xy 0 'val0  ; x2=subwrd(result,3); y2=subwrd(result,6); 
    'q gr2xy 1 'min.1 ; x3=subwrd(result,3); y3=subwrd(result,6); 
    'q gr2xy 1 'max.1 ; x4=subwrd(result,3); y4=subwrd(result,6); 
    'set line 98 1 10' ; 'draw polyf 'x2' 'y2' 'x3' 'y3' 'x4' 'y4
    'set line 98 1 10' ; 'draw line 'x2' 'y2' 'x3' 'y3' 'x4' 'y4' 'x2' 'y2
  else
    'q gr2xy 0 'val0  ; x2=subwrd(result,3); y2=subwrd(result,6); 
    'q gr2xy 2 'min.2 ; x3=subwrd(result,3); y3=subwrd(result,6); 
    'q gr2xy 2 'max.2 ; x4=subwrd(result,3); y4=subwrd(result,6); 
    'set line 98 1 10' ; 'draw polyf 'x2' 'y2' 'x3' 'y3' 'x4' 'y4
    'set line 98 1 10' ; 'draw line 'x2' 'y2' 'x3' 'y3' 'x4' 'y4' 'x2' 'y2
  endif

* Plot the observed index values
  'set dfile 1'
  'set t 'tfirst' 'tlast
  'set frame off'
  'set grid off'
  'set ylab off'
  'set xlab off'
  'set ccolor 1'
  'set cmark 0'
  'set cstyle 1'
  'set cthick 13'
  'set grads off'
  'd nino34.'fn'(x=1,y=1)'
  'set ccolor 97'
  'set cmark 0'
  'set cstyle 1'
  'set cthick 5'
  'set grads off'
  'd nino34.'fn'(x=1,y=1)'
endif

* Draw a title
'set strsiz 0.17 0.20'
months='January February March April May June July August September October November December'
months='JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC'
month=subwrd(months,mm)
'set string 1 bl 6'
'draw string 0.75 'py-emargin+0.05' Forecasts of NINO3.4 SST Anomalies'
'set string 1 br 6'
'draw string 'px-emargin' 'py-emargin+0.05' Initialized: 'month' 'year
'set string 301 tl 6 90'
'set strsiz 0.10 0.11'
'set font 10'
'draw string 'px-emargin+0.05' 0.6 *Created by COLA'

* Print the results
if (print)
  'gxprint plume_'year%mm'.png x900 y695'
endif
return

* * * END OF MAIN SCRIPT * * *

function setcols(alpha)
'set rgb 97 252 214 48'    ;* yellow highlight for obs 
'set rgb 98 220 220 220 90'

'set rgb 301 140 140 140'  ;* gray
'set rgb 302 234 101   6'  ;* orange
'set rgb 303  10 247 239'  ;* bright cyan/turquoise 
'set rgb 304 171  14 169'  ;* dark purple  
'set rgb 305 250 130 250'  ;* bright purple
'set rgb 306  13 246  67'  ;* bright green  
'set rgb 307  30 140  56'  ;* dark green   
'set rgb 308  10  30 250'  ;* dark blue

'set rgb 217  15  92 243 'alpha ;* blue/cold
'set rgb 218  23 101 243 'alpha
'set rgb 219  37 110 243 'alpha
'set rgb 220  51 120 243 'alpha 
'set rgb 221  66 129 243 'alpha
'set rgb 222  81 139 243 'alpha  
'set rgb 223  96 148 243 'alpha
'set rgb 224 110 157 243 'alpha 
'set rgb 225 125 167 243 'alpha 
'set rgb 226 140 176 242 'alpha 
'set rgb 227 154 185 243 'alpha 
'set rgb 228 168 195 243 'alpha 
'set rgb 229 183 204 243 'alpha 
'set rgb 230 198 213 243 'alpha 
'set rgb 231 213 224 243 'alpha 
'set rgb 232 227 232 243 'alpha 
*midpoint
'set rgb 130 245 229 231 'alpha
'set rgb 131 245 215 218 'alpha 
'set rgb 132 245 199 206 'alpha 
'set rgb 133 245 185 194 'alpha 
'set rgb 134 245 169 180 'alpha 
'set rgb 135 245 155 168 'alpha 
'set rgb 136 245 139 154 'alpha 
'set rgb 137 245 125 143 'alpha 
'set rgb 138 245 110 129 'alpha 
'set rgb 139 245  94 116 'alpha
'set rgb 140 245  81 105 'alpha 
'set rgb 141 245  66  92 'alpha  
'set rgb 142 245  52  79 'alpha
'set rgb 143 245  43  67 'alpha
'set rgb 144 245  41  52 'alpha 
'set rgb 145 245  41  41 'alpha ;* red/hot

_cols='217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232'
_cols=_cols' 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145'


